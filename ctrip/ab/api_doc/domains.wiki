%title 域模型 


=域模型=

%toc
=Property=

==描述 ==
键值对，值对象，用于扩展其他对象信息

==组成 ==
| 成员  | 类型   | 约束                          | 描述   |
|-------|--------|-------------------------------|--------|
| name  | String | Required,Unique(在一个对象内) | 属性名 |
| value | String | Optional                      | 属性值 |

==例子 ==
* XML:
{{{ class="brush:xml"
 <property>
     <name>pageId</name>
     <value>No001</value>
 </property>
  }}}
* JSON:
{{{ class="brush:js"

  {
     "name": "pageId",
     "value": "No001"
  },
  }}}

=RuleType=

==描述 ==
分流规则， 挂在Experiment上。比如按百分比分流。

==组成 ==
| 成员        | 类型                                | 约束            | 描述                                |
|-------------|-------------------------------------|-----------------|-------------------------------------|
| code        | String(字符，数字，连字符，下划线） | Required,Unique | 规则唯一性标识， 最好具有语义，可读 |
| description | String                              | Optional        | 用于描述些规则                      |

==资源地址 ==
# [[rule-types_get|/ab/rule-types GET]] 列出所有的`RupeType`
# [[rule-types_id_get|/ab/rule-types/{code} GET]] 获取指定的 `RupeType`

==例子 ==
* XML:
{{{ class="brush:xml"
    <?xml version="1.0" encoding="UTF-8"?>
    <ruleType>
       <url>http://localhost:8080/ab-service/rule-types/PERSENT</url>
       <code>PERSENT</code>
       <description>The users fork by percentage</description>
    </ruleType>
  }}}
* JSON:
{{{ class="brush:js"
  {
      "url": "http://localhost:8080/ab-service/rule-types/PERSENT",
      "code": "PERSENT",
      "description": "The users fork by percentage"
   }
  }}}

=Experiment=

==描述 ==
代表一个AB测试

==组成 ==
| 成员         | 类型                                | 约束            | 描述                                         |
|--------------|-------------------------------------|-----------------|----------------------------------------------|
| code         | String(字符，数字，连字符，下划线） | Required,Unique | 这个ab测试唯一性标识， 最好具有语义，可读    |
| name         | String                              | Optional        | 一个简短的名称                               |
| description  | String                              | Optional        | 用于描述些规则                               |
| startDate    | Date(yyyy-mm-dd HH:MM)              | Required        | 测试开始的时间                               |
| endDate      | Date(yyyy-mm-dd HH:MM)              | Required        | 测试结束的时间                               |
| isActive     | boolean(true,false)                 | Required        | 测试是否激活                                 |
| ruleType     | [[#toc_2|RuleType]]                 | Required        | 测试使用的分流规则                           |
| properties   | List<[[#toc_2|Property]]>           | Optional        | 用于存储扩展信息，每个成员是一个name value对 |
| alternatives | List<[[#toc_2|Alternative]]>        | Required        | 测试所包含的方案，至少含一个                 |

==资源地址 ==
# [[api_doc/experiments_post|/ab/experiments POST]] 新建一个 `Experiment`
# [[api_doc/experiments_get|/ab/experiments GET]] 列出所有的`Experiment`
# [[api_doc/experiments_id_get|/ab/experiments/{code} GET]] 获取指定的 `Experiment`
# [[api_doc/experiments_id_put|/ab/experiments/{code} PUT]] 刷新整个`Experiment`

==例子 ==
* XML:
{{{ class="brush:xml"
<?xml version="1.0" encoding="UTF-8"?>
<experiment>
   <url>http://localhost:8080/ab-service/experiments/HOTEL_HOME_PAGE_BANNER906453e3-5f86-48d3-a093-de8dee183e74</url>
   <code>HOTEL_HOME_PAGE_BANNER906453e3-5f86-48d3-a093-de8dee183e74</code>
   <name>Test of the login page.</name>
   <description>Test of the login page.</description>
   <startDate>2012-10-25 00:00</startDate>
   <endDate>2012-10-25 00:00</endDate>
   <isActive>true</isActive>
   <ruleType>
      <url>http://localhost:8080/ab-service/rule-types/PERSENT</url>
      <code>PERSENT</code>
      <description>The users fork by percentage</description>
   </ruleType>
   <properties />
   <alternatives />
</experiment>
  }}}
* JSON:
{{{ class="brush:js"
{
   "url": "http://localhost:8080/ab-service/experiments/HOTEL_HOME_PAGE_BANNER906453e3-5f86-48d3-a093-de8dee183e74",
   "code": "HOTEL_HOME_PAGE_BANNER906453e3-5f86-48d3-a093-de8dee183e74",
   "name": "Test of the login page.",
   "description": "Test of the login page.",
   "startDate": "2012-10-25 00:00",
   "endDate": "2012-10-25 00:00",
   "isActive": true,
   "ruleType": {
      "url": "http://localhost:8080/ab-service/rule-types/PERSENT",
      "code": "PERSENT",
      "description": "The users fork by percentage"
   },
   "properties": [ ... ],
   "alternatives": [ ... ]
}
  }}}

=Alternative=

==描述 ==
一个AB测试的一个方案

==组成 ==
===直接成员：===
| 成员        | 类型                         | 约束     | 描述                                         |
|-------------|------------------------------|----------|----------------------------------------------|
| code        | Enum(A_A, A_B, A_C .... A_Z) | Required | 唯一性标识                                   |
| name        | String                       | Optional | 一个简短的名称                               |
| description | String                       | Optional | 详细描述                                     |
| isActive    | boolean(true,false)          | Required | 测试是否激活                                 |
| ruleParams  | [[#toc_2|ruleParams]]        | Required | 该方案的分流参数                             |
| properties  | List<[[#toc_2|Property]]>    | Optional | 用于存储扩展信息，每个成员是一个name value对 |

===内部对象ruleParams ===
设置方案的分流参数，预留九个位置，具体的使用依赖于采用的分流规则

| 成员   | 类型   | 约束     | 描述   |
|--------|--------|----------|--------|
| param1 | String | Optional | 参数值 |
| param2 | String | Optional | 参数值 |
| param3 | String | Optional | 参数值 |
| param4 | String | Optional | 参数值 |
| param5 | String | Optional | 参数值 |
| param6 | String | Optional | 参数值 |
| param7 | String | Optional | 参数值 |
| param8 | String | Optional | 参数值 |
| param9 | String | Optional | 参数值 |

==资源地址 ==

==例子 ==
* XML:
{{{ class="brush:xml"
<?xml version="1.0" encoding="UTF-8"?>
<alternative>
   <code>A_A</code>
   <name>A1</name>
   <description>A1 desp.</description>
   <isActive>true</isActive>
   <ruleParams>
      <param1>a1p1</param1>
   </ruleParams>
   <properties>
      <property>
         <name>a</name>
         <value>a</value>
      </property>
   </properties>
</alternative>

  }}}
* JSON:
{{{ class="brush:js"

  {
     "code": "A_A",
     "name": "A1",
     "description": "A1 desp.",
     "isActive": true,
     "ruleParams": {
        "param1": "a1p1",
        "param2": null,
        "param3": null,
        "param4": null,
        "param5": null,
        "param6": null,
        "param7": null,
        "param8": null,
        "param9": null
     },
     "properties": [
        {
           "name": "a",
           "value": "a"
        }
     ]
  },
}
  }}}
  
{{{ class="brush:java"
//Specify the experiment code
String experimentCode = "20121001_HOTEL_HOMEPAGE_NEW_VERSION_1";

//Get the alternative which the current user should visit
AlternativeEnum result = ExperimentClient.GetAlternative(this.Context, experimentCode);

//Build the page content by the alternative code.
swith(result){
    case AlternativeEnum.A:
        return buildPageA();

    case AlternativeEnum.B:
        return buildPageB();

    default:  
        return buildPageA();
}
  }}}
  
