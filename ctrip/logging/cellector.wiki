%title Collector Code
=Collector Code=

*ThriftThreadedSelectorCollector :*
# main函数所在
# 实例Thrift None blocking tranport
# 实例Processor:ThriftCollectorLockFreeImpl 
# 启动SelectorServer

*TThreadedSelectorServerEx :*
# 扩展了TThreadedSelectorServer 
# 可以计算chunk的大小
*InvocationEx :*
# 计算chunk的大小

*ThriftCollectorLockFreeImpl:*
# 初始化HBase Client(Hbase存储了通用配置, agent config)
# 检查Habase中config表的存在
# 根据配置文件，初始化Queue
# 启动间隔从HBase中取agent config的task
# 注册shutdown hook: 关闭Hbase Client
# 注册shutdown hook: 关闭Queue
# 开启定时报告Collector状态的task

*FreewayConfigurationFactory :*
# 获取配置
# 配置文件：freeway-collector-conf.xml
# 使用了Hadoop的实例Configuration

*DaemonWatcher:*
# 用于退出系统，调用了System.exit(status)
# 它还继承了PidFile,使用一个file存储pid,但没发现使用的地方
 
*HostUtil:*
# fetch the hostName and hostName
# 获取第一份有效的ipv4
 
*StatReportingTask:*
# 每两钟收集一次collector状态信息

*SystemInfo:*
# 收集系统和java进程cpu内存使用情况
# 通过 Runtime 和 jezhumble

=java agent=
*MessageSender:*
# 正常发
# tryLater:
  # 两次随机睡5s
  # 一次随机睡30s
  # 两次随机睡5s
  # 一次随机睡60s 
# 异常:
  # 随机睡300s
  

MessageManager.startNewSender: isCoreThread?

